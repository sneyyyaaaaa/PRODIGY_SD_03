import pickle
import os

class Contact:
    def __init__(self, name, phone, email):
        self.name = name
        self.phone = phone
        self.email = email

def save_contacts(contacts):
    with open("contacts.pkl", "wb") as file:
        pickle.dump(contacts, file)

def load_contacts():
    if os.path.exists("contacts.pkl"):
        with open("contacts.pkl", "rb") as file:
            return pickle.load(file)
    return []

def display_menu():
    print("\nContact Management System")
    print("1. Add New Contact")
    print("2. View Contacts")
    print("3. Edit Contact")
    print("4. Delete Contact")
    print("5. Exit")

def add_contact(contacts):
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    new_contact = Contact(name, phone, email)
    contacts.append(new_contact)
    print("Contact added successfully.")

def view_contacts(contacts):
    if not contacts:
        print("No contacts found.")
    else:
        for index, contact in enumerate(contacts, start=1):
            print(f"{index}. {contact.name} - {contact.phone} - {contact.email}")

def edit_contact(contacts):
    view_contacts(contacts)
    if not contacts:
        return

    try:
        index = int(input("Enter the index of the contact to edit: ")) - 1
        if 0 <= index < len(contacts):
            contact = contacts[index]
            print(f"\nEditing contact: {contact.name} - {contact.phone} - {contact.email}")
            contact.name = input("Enter new name (press Enter to keep existing): ") or contact.name
            contact.phone = input("Enter new phone number (press Enter to keep existing): ") or contact.phone
            contact.email = input("Enter new email address (press Enter to keep existing): ") or contact.email
            print("Contact edited successfully.")
        else:
            print("Invalid index.")
    except ValueError:
        print("Invalid input. Please enter a valid index.")

def delete_contact(contacts):
    view_contacts(contacts)
    if not contacts:
        return

    try:
        index = int(input("Enter the index of the contact to delete: ")) - 1
        if 0 <= index < len(contacts):
            deleted_contact = contacts.pop(index)
            print(f"Contact deleted: {deleted_contact.name} - {deleted_contact.phone} - {deleted_contact.email}")
            print("Contact deleted successfully.")
        else:
            print("Invalid index.")
    except ValueError:
        print("Invalid input. Please enter a valid index.")

def main():
    contacts = load_contacts()

    while True:
        display_menu()
        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            add_contact(contacts)
        elif choice == "2":
            view_contacts(contacts)
        elif choice == "3":
            edit_contact(contacts)
        elif choice == "4":
            delete_contact(contacts)
        elif choice == "5":
            save_contacts(contacts)
            print("Exiting program. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 5.")

if __name__ == "__main__":
    main()
